apiVersion: apps/v1
kind: Deployment
metadata:
  name: bb-demo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      bb: web
  template:
    metadata:
      labels:
        bb: web
    spec:
      containers:
      - name: bb-site
        image: getting-started
---
apiVersion: v1
kind: Service
metadata:
  name: bb-entrypoint
  namespace: default
spec:
  type: NodePort
  selector:
    bb: web
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30001

#In this Kubernetes YAML file, we have two objects, separated by the ---:

# A Deployment, describing a scalable group of identical pods. In this case, youâ€™ll get just one replica, or copy of your pod, and that pod (which is described under the template: key) has just one container in it, based off of your bulletinboard:1.0 image from the previous step in this tutorial.
# A NodePort service, which will route traffic from port 30001 on your host to port 8080 inside the pods it routes to, allowing you to reach your bulletin board from the network.
# Also, notice that while Kubernetes YAML can appear long and complicated at first, it almost always follows the same pattern:

# The apiVersion, which indicates the Kubernetes API that parses this object
# The kind indicating what sort of object this is
# Some metadata applying things like names to your objects
# The spec specifying all the parameters and configurations of your object.